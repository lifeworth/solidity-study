{
	"id": "1d66f9dcb24056e07e51ca03c7142ceb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/FunctionOutputs.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.7;\n\ncontract fuctionOutDemo {\n    function returnMenu() public pure returns (uint256, bool) {\n        return (100, true);\n    }\n\n    function returnNamed() public pure returns (uint256 x, bool b) {\n        x = 1;\n        b = true;\n        x = 2;\n    }\n\n    function destructuringAssignment() public pure returns (uint   ,bool,uint  ) {\n        uint a;        \n        bool b;\n        uint c;\n        (a, b) = returnMenu();\n        (c,) = returnMenu();\n        return (a,b,c);\n\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contract/FunctionOutputs.sol": {
				"fuctionOutDemo": {
					"abi": [
						{
							"inputs": [],
							"name": "destructuringAssignment",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "returnMenu",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "returnNamed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "b",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/FunctionOutputs.sol\":61:541  contract fuctionOutDemo {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/FunctionOutputs.sol\":61:541  contract fuctionOutDemo {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x343a6f93\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3dece511\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf550211d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/FunctionOutputs.sol\":314:539  function destructuringAssignment() public pure returns (uint   ,bool,uint  ) {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/FunctionOutputs.sol\":190:308  function returnNamed() public pure returns (uint256 x, bool b) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap3\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/FunctionOutputs.sol\":91:184  function returnMenu() public pure returns (uint256, bool) {... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/FunctionOutputs.sol\":314:539  function destructuringAssignment() public pure returns (uint   ,bool,uint  ) {... */\n    tag_7:\n        /* \"contract/FunctionOutputs.sol\":370:374  uint */\n      0x00\n        /* \"contract/FunctionOutputs.sol\":378:382  bool */\n      dup1\n        /* \"contract/FunctionOutputs.sol\":383:387  uint */\n      0x00\n        /* \"contract/FunctionOutputs.sol\":401:407  uint a */\n      dup1\n        /* \"contract/FunctionOutputs.sol\":425:431  bool b */\n      0x00\n        /* \"contract/FunctionOutputs.sol\":441:447  uint c */\n      dup1\n        /* \"contract/FunctionOutputs.sol\":466:478  returnMenu() */\n      tag_18\n        /* \"contract/FunctionOutputs.sol\":466:476  returnMenu */\n      tag_15\n        /* \"contract/FunctionOutputs.sol\":466:478  returnMenu() */\n      jump\t// in\n    tag_18:\n        /* \"contract/FunctionOutputs.sol\":457:478  (a, b) = returnMenu() */\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      pop\n      pop\n        /* \"contract/FunctionOutputs.sol\":495:507  returnMenu() */\n      tag_19\n        /* \"contract/FunctionOutputs.sol\":495:505  returnMenu */\n      tag_15\n        /* \"contract/FunctionOutputs.sol\":495:507  returnMenu() */\n      jump\t// in\n    tag_19:\n        /* \"contract/FunctionOutputs.sol\":488:507  (c,) = returnMenu() */\n      pop\n      dup1\n      swap2\n      pop\n      pop\n        /* \"contract/FunctionOutputs.sol\":525:526  a */\n      dup3\n        /* \"contract/FunctionOutputs.sol\":527:528  b */\n      dup3\n        /* \"contract/FunctionOutputs.sol\":529:530  c */\n      dup3\n        /* \"contract/FunctionOutputs.sol\":517:531  return (a,b,c) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"contract/FunctionOutputs.sol\":314:539  function destructuringAssignment() public pure returns (uint   ,bool,uint  ) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"contract/FunctionOutputs.sol\":190:308  function returnNamed() public pure returns (uint256 x, bool b) {... */\n    tag_11:\n        /* \"contract/FunctionOutputs.sol\":234:243  uint256 x */\n      0x00\n        /* \"contract/FunctionOutputs.sol\":245:251  bool b */\n      dup1\n        /* \"contract/FunctionOutputs.sol\":267:268  1 */\n      0x01\n        /* \"contract/FunctionOutputs.sol\":263:268  x = 1 */\n      swap2\n      pop\n        /* \"contract/FunctionOutputs.sol\":282:286  true */\n      0x01\n        /* \"contract/FunctionOutputs.sol\":278:286  b = true */\n      swap1\n      pop\n        /* \"contract/FunctionOutputs.sol\":300:301  2 */\n      0x02\n        /* \"contract/FunctionOutputs.sol\":296:301  x = 2 */\n      swap2\n      pop\n        /* \"contract/FunctionOutputs.sol\":190:308  function returnNamed() public pure returns (uint256 x, bool b) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contract/FunctionOutputs.sol\":91:184  function returnMenu() public pure returns (uint256, bool) {... */\n    tag_15:\n        /* \"contract/FunctionOutputs.sol\":134:141  uint256 */\n      0x00\n        /* \"contract/FunctionOutputs.sol\":143:147  bool */\n      dup1\n        /* \"contract/FunctionOutputs.sol\":167:170  100 */\n      0x64\n        /* \"contract/FunctionOutputs.sol\":172:176  true */\n      0x01\n        /* \"contract/FunctionOutputs.sol\":159:177  return (100, true) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contract/FunctionOutputs.sol\":91:184  function returnMenu() public pure returns (uint256, bool) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":7:116   */\n    tag_23:\n        /* \"#utility.yul\":88:109   */\n      tag_25\n        /* \"#utility.yul\":103:108   */\n      dup2\n        /* \"#utility.yul\":88:109   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":83:86   */\n      dup3\n        /* \"#utility.yul\":76:110   */\n      mstore\n        /* \"#utility.yul\":7:116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":122:240   */\n    tag_27:\n        /* \"#utility.yul\":209:233   */\n      tag_29\n        /* \"#utility.yul\":227:232   */\n      dup2\n        /* \"#utility.yul\":209:233   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":204:207   */\n      dup3\n        /* \"#utility.yul\":197:234   */\n      mstore\n        /* \"#utility.yul\":122:240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":246:566   */\n    tag_13:\n        /* \"#utility.yul\":361:365   */\n      0x00\n        /* \"#utility.yul\":399:401   */\n      0x40\n        /* \"#utility.yul\":388:397   */\n      dup3\n        /* \"#utility.yul\":384:402   */\n      add\n        /* \"#utility.yul\":376:402   */\n      swap1\n      pop\n        /* \"#utility.yul\":412:483   */\n      tag_32\n        /* \"#utility.yul\":480:481   */\n      0x00\n        /* \"#utility.yul\":469:478   */\n      dup4\n        /* \"#utility.yul\":465:482   */\n      add\n        /* \"#utility.yul\":456:462   */\n      dup6\n        /* \"#utility.yul\":412:483   */\n      tag_27\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":493:559   */\n      tag_33\n        /* \"#utility.yul\":555:557   */\n      0x20\n        /* \"#utility.yul\":544:553   */\n      dup4\n        /* \"#utility.yul\":540:558   */\n      add\n        /* \"#utility.yul\":531:537   */\n      dup5\n        /* \"#utility.yul\":493:559   */\n      tag_23\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":246:566   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":572:1002   */\n    tag_9:\n        /* \"#utility.yul\":715:719   */\n      0x00\n        /* \"#utility.yul\":753:755   */\n      0x60\n        /* \"#utility.yul\":742:751   */\n      dup3\n        /* \"#utility.yul\":738:756   */\n      add\n        /* \"#utility.yul\":730:756   */\n      swap1\n      pop\n        /* \"#utility.yul\":766:837   */\n      tag_35\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":823:832   */\n      dup4\n        /* \"#utility.yul\":819:836   */\n      add\n        /* \"#utility.yul\":810:816   */\n      dup7\n        /* \"#utility.yul\":766:837   */\n      tag_27\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":847:913   */\n      tag_36\n        /* \"#utility.yul\":909:911   */\n      0x20\n        /* \"#utility.yul\":898:907   */\n      dup4\n        /* \"#utility.yul\":894:912   */\n      add\n        /* \"#utility.yul\":885:891   */\n      dup6\n        /* \"#utility.yul\":847:913   */\n      tag_23\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":923:995   */\n      tag_37\n        /* \"#utility.yul\":991:993   */\n      0x40\n        /* \"#utility.yul\":980:989   */\n      dup4\n        /* \"#utility.yul\":976:994   */\n      add\n        /* \"#utility.yul\":967:973   */\n      dup5\n        /* \"#utility.yul\":923:995   */\n      tag_27\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":572:1002   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1008:1098   */\n    tag_26:\n        /* \"#utility.yul\":1042:1049   */\n      0x00\n        /* \"#utility.yul\":1085:1090   */\n      dup2\n        /* \"#utility.yul\":1078:1091   */\n      iszero\n        /* \"#utility.yul\":1071:1092   */\n      iszero\n        /* \"#utility.yul\":1060:1092   */\n      swap1\n      pop\n        /* \"#utility.yul\":1008:1098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1104:1181   */\n    tag_30:\n        /* \"#utility.yul\":1141:1148   */\n      0x00\n        /* \"#utility.yul\":1170:1175   */\n      dup2\n        /* \"#utility.yul\":1159:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1104:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122092e805bf2b6bb9cf2595b602a12b3cba3051f63bd28401e12052fca4c9257ef364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101c7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063343a6f93146100465780633dece51114610066578063f550211d14610085575b600080fd5b61004e6100a4565b60405161005d93929190610144565b60405180910390f35b61006e6100db565b60405161007c92919061011b565b60405180910390f35b61008d6100ee565b60405161009b92919061011b565b60405180910390f35b6000806000806000806100b56100ee565b80935081945050506100c56100ee565b5080915050828282955095509550505050909192565b6000806001915060019050600291509091565b60008060646001915091509091565b6101068161017b565b82525050565b61011581610187565b82525050565b6000604082019050610130600083018561010c565b61013d60208301846100fd565b9392505050565b6000606082019050610159600083018661010c565b61016660208301856100fd565b610173604083018461010c565b949350505050565b60008115159050919050565b600081905091905056fea264697066735822122092e805bf2b6bb9cf2595b602a12b3cba3051f63bd28401e12052fca4c9257ef364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x343A6F93 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3DECE511 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xF550211D EQ PUSH2 0x85 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP3 SWAP2 SWAP1 PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0xEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B SWAP3 SWAP2 SWAP1 PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xB5 PUSH2 0xEE JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP PUSH2 0xC5 PUSH2 0xEE JUMP JUMPDEST POP DUP1 SWAP2 POP POP DUP3 DUP3 DUP3 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH1 0x2 SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x1 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x106 DUP2 PUSH2 0x17B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x115 DUP2 PUSH2 0x187 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x130 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x13D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x159 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x166 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFD JUMP JUMPDEST PUSH2 0x173 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xE8 SDIV 0xBF 0x2B PUSH12 0xB9CF2595B602A12B3CBA3051 0xF6 EXTCODESIZE 0xD2 DUP5 ADD 0xE1 KECCAK256 MSTORE 0xFC LOG4 0xC9 0x25 PUSH31 0xF364736F6C6343000807003300000000000000000000000000000000000000 ",
							"sourceMap": "61:480:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@destructuringAssignment_70": {
									"entryPoint": 164,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@returnMenu_13": {
									"entryPoint": 238,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@returnNamed_33": {
									"entryPoint": 219,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_uint256__to_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1184:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "83:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "103:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "88:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "76:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "76:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "54:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "61:3:1",
														"type": ""
													}
												],
												"src": "7:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "187:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "204:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "209:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "197:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "197:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "175:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "182:3:1",
														"type": ""
													}
												],
												"src": "122:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "366:200:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "376:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "388:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "399:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "384:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "376:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "456:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "469:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "480:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "465:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "465:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "412:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "412:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "412:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "544:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "555:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "540:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "540:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "493:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:66:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "330:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "342:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "350:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "361:4:1",
														"type": ""
													}
												],
												"src": "246:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "720:282:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "730:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "742:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "753:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "738:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "738:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "730:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "823:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "834:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "819:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "766:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "885:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "898:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "909:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "894:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "894:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "847:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:66:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "967:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "980:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "991:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "976:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "976:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "923:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "923:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_uint256__to_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "676:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "688:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "696:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "704:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "715:4:1",
														"type": ""
													}
												],
												"src": "572:430:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1050:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1060:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1085:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1078:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1071:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1071:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1060:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1032:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1042:7:1",
														"type": ""
													}
												],
												"src": "1008:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1149:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1159:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1170:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1159:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1131:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1141:7:1",
														"type": ""
													}
												],
												"src": "1104:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_uint256__to_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063343a6f93146100465780633dece51114610066578063f550211d14610085575b600080fd5b61004e6100a4565b60405161005d93929190610144565b60405180910390f35b61006e6100db565b60405161007c92919061011b565b60405180910390f35b61008d6100ee565b60405161009b92919061011b565b60405180910390f35b6000806000806000806100b56100ee565b80935081945050506100c56100ee565b5080915050828282955095509550505050909192565b6000806001915060019050600291509091565b60008060646001915091509091565b6101068161017b565b82525050565b61011581610187565b82525050565b6000604082019050610130600083018561010c565b61013d60208301846100fd565b9392505050565b6000606082019050610159600083018661010c565b61016660208301856100fd565b610173604083018461010c565b949350505050565b60008115159050919050565b600081905091905056fea264697066735822122092e805bf2b6bb9cf2595b602a12b3cba3051f63bd28401e12052fca4c9257ef364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x343A6F93 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3DECE511 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xF550211D EQ PUSH2 0x85 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP3 SWAP2 SWAP1 PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0xEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9B SWAP3 SWAP2 SWAP1 PUSH2 0x11B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xB5 PUSH2 0xEE JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP PUSH2 0xC5 PUSH2 0xEE JUMP JUMPDEST POP DUP1 SWAP2 POP POP DUP3 DUP3 DUP3 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH1 0x2 SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x1 SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x106 DUP2 PUSH2 0x17B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x115 DUP2 PUSH2 0x187 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x130 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x13D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x159 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10C JUMP JUMPDEST PUSH2 0x166 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFD JUMP JUMPDEST PUSH2 0x173 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xE8 SDIV 0xBF 0x2B PUSH12 0xB9CF2595B602A12B3CBA3051 0xF6 EXTCODESIZE 0xD2 DUP5 ADD 0xE1 KECCAK256 MSTORE 0xFC LOG4 0xC9 0x25 PUSH31 0xF364736F6C6343000807003300000000000000000000000000000000000000 ",
							"sourceMap": "61:480:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;314:225;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;190:118;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;91:93;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;314:225;370:4;378;383;401:6;425;441;466:12;:10;:12::i;:::-;457:21;;;;;;;;495:12;:10;:12::i;:::-;488:19;;;;;525:1;527;529;517:14;;;;;;;;;314:225;;;:::o;190:118::-;234:9;245:6;267:1;263:5;;282:4;278:8;;300:1;296:5;;190:118;;:::o;91:93::-;134:7;143:4;167:3;172:4;159:18;;;;91:93;;:::o;7:109:1:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:118::-;209:24;227:5;209:24;:::i;:::-;204:3;197:37;122:118;;:::o;246:320::-;361:4;399:2;388:9;384:18;376:26;;412:71;480:1;469:9;465:17;456:6;412:71;:::i;:::-;493:66;555:2;544:9;540:18;531:6;493:66;:::i;:::-;246:320;;;;;:::o;572:430::-;715:4;753:2;742:9;738:18;730:26;;766:71;834:1;823:9;819:17;810:6;766:71;:::i;:::-;847:66;909:2;898:9;894:18;885:6;847:66;:::i;:::-;923:72;991:2;980:9;976:18;967:6;923:72;:::i;:::-;572:430;;;;;;:::o;1008:90::-;1042:7;1085:5;1078:13;1071:21;1060:32;;1008:90;;;:::o;1104:77::-;1141:7;1170:5;1159:16;;1104:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "91000",
								"executionCost": "141",
								"totalCost": "91141"
							},
							"external": {
								"destructuringAssignment()": "infinite",
								"returnMenu()": "479",
								"returnNamed()": "465"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 541,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 541,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 541,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 541,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 541,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 541,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 541,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 541,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 541,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122092e805bf2b6bb9cf2595b602a12b3cba3051f63bd28401e12052fca4c9257ef364736f6c63430008070033",
									".code": [
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "343A6F93"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "3DECE511"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "F550211D"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 314,
											"end": 539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 383,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 466,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 478,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 466,
											"end": 478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 495,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 495,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 495,
											"end": 507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 495,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 495,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 488,
											"end": 507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 488,
											"end": 507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 488,
											"end": 507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 527,
											"end": 528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 531,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 314,
											"end": 539,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 190,
											"end": 308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 234,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 263,
											"end": 268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 263,
											"end": 268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 282,
											"end": 286,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 300,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 296,
											"end": 301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 296,
											"end": 301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 190,
											"end": 308,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 91,
											"end": 184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 134,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 172,
											"end": 176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 184,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 103,
											"end": 108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 88,
											"end": 109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 83,
											"end": 86,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 76,
											"end": 110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 122,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 122,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 227,
											"end": 232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 209,
											"end": 233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 197,
											"end": 234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 122,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 246,
											"end": 566,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 246,
											"end": 566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 401,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 384,
											"end": 402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 376,
											"end": 402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 376,
											"end": 402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 412,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 480,
											"end": 481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 478,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 465,
											"end": 482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 462,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 412,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 412,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 412,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 412,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 555,
											"end": 557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 540,
											"end": 558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 537,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 493,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 493,
											"end": 559,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 493,
											"end": 559,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 493,
											"end": 559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 566,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 572,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 572,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 715,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 766,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 832,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 819,
											"end": 836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 766,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 766,
											"end": 837,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 766,
											"end": 837,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 766,
											"end": 837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 847,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 909,
											"end": 911,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 894,
											"end": 912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 891,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 847,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 847,
											"end": 913,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 847,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 847,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 923,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 991,
											"end": 993,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 976,
											"end": 994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 967,
											"end": 973,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 923,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 923,
											"end": 995,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 923,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 923,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1002,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1002,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1002,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1008,
											"end": 1098,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1008,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1092,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1098,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1104,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1104,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1181,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"destructuringAssignment()": "343a6f93",
							"returnMenu()": "f550211d",
							"returnNamed()": "3dece511"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"destructuringAssignment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnMenu\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"returnNamed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/FunctionOutputs.sol\":\"fuctionOutDemo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/FunctionOutputs.sol\":{\"keccak256\":\"0x112696a8621e2717f8f789c9bb8401d8675743a723e16d78fa24277b1747ce15\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e97c9d7acaa1106992a8ec305341f4283ca2150165d582e54c374bc6260dad09\",\"dweb:/ipfs/QmdemjhfGvhShLvexF9jwR1NnrU9ggbThv2Qyx3kViDkht\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contract/FunctionOutputs.sol": {
				"ast": {
					"absolutePath": "contract/FunctionOutputs.sol",
					"exportedSymbols": {
						"fuctionOutDemo": [
							71
						]
					},
					"id": 72,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 71,
							"linearizedBaseContracts": [
								71
							],
							"name": "fuctionOutDemo",
							"nameLocation": "70:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "149:35:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "313030",
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "167:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														{
															"hexValue": "74727565",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "172:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"id": 10,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "166:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_rational_100_by_1_$_t_bool_$",
														"typeString": "tuple(int_const 100,bool)"
													}
												},
												"functionReturnParameters": 7,
												"id": 11,
												"nodeType": "Return",
												"src": "159:18:0"
											}
										]
									},
									"functionSelector": "f550211d",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnMenu",
									"nameLocation": "100:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "134:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "143:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "143:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:15:0"
									},
									"scope": 71,
									"src": "91:93:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "253:55:0",
										"statements": [
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "263:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "267:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "263:5:0"
											},
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 24,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "278:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "282:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "278:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "278:8:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "296:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "300:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "296:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "296:5:0"
											}
										]
									},
									"functionSelector": "3dece511",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "returnNamed",
									"nameLocation": "199:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "242:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "234:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "250:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "245:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:19:0"
									},
									"scope": 71,
									"src": "190:118:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "391:148:0",
										"statements": [
											{
												"assignments": [
													43
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "406:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "401:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 42,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "401:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"nodeType": "VariableDeclarationStatement",
												"src": "401:6:0"
											},
											{
												"assignments": [
													46
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "430:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "425:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 45,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "425:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 47,
												"nodeType": "VariableDeclarationStatement",
												"src": "425:6:0"
											},
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "446:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "441:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 48,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "441:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 50,
												"nodeType": "VariableDeclarationStatement",
												"src": "441:6:0"
											},
											{
												"expression": {
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 51,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "458:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 52,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "461:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 53,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "457:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 54,
															"name": "returnMenu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "466:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$_t_bool_$",
																"typeString": "function () pure returns (uint256,bool)"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "466:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"src": "457:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "457:21:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 58,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "489:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															null
														],
														"id": 59,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "488:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$__$",
															"typeString": "tuple(uint256,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 60,
															"name": "returnMenu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "495:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$_t_bool_$",
																"typeString": "function () pure returns (uint256,bool)"
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "495:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
															"typeString": "tuple(uint256,bool)"
														}
													},
													"src": "488:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "488:19:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 64,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "525:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 65,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "527:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 66,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "529:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 67,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$_t_uint256_$",
														"typeString": "tuple(uint256,bool,uint256)"
													}
												},
												"functionReturnParameters": 41,
												"id": 68,
												"nodeType": "Return",
												"src": "517:14:0"
											}
										]
									},
									"functionSelector": "343a6f93",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destructuringAssignment",
									"nameLocation": "323:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "370:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "378:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "383:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "383:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:21:0"
									},
									"scope": 71,
									"src": "314:225:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 72,
							"src": "61:480:0",
							"usedErrors": []
						}
					],
					"src": "37:505:0"
				},
				"id": 0
			}
		}
	}
}